# data file for the Fltk User Interface Designer (fluid)
version 1.0108 
header_name {.h} 
code_name {.cxx}
Function {make_window()} {open
} {
  code {-- myprint
function myprint(...)
if console == nil then
print = oldprint

return
end

	local str=""
	local i=1
	while arg[i]~= nil do
		if str=="" then
			str=tostring(arg[i])
		else
			str=str.."	"..tostring(arg[i])
		end
		i=i+1
	end
	local l_offset=\#consoleOut_buf:text()
	consoleOut:insert_position(l_offset)
	consoleOut:insert(str.."\\n")
	consoleOut:show_insert_position()
	consoleOut:textfont(4)
	consoleOut:textsize(10)
end} {selected
  }
  code {-- consoleRun
function consoleRun(w)
	--tell igame3d that the input field has the focus
	ig3d_TellFocus_b(true)
	if Fl:event_key() ~= fltk.FL_Enter and Fl:event_key() ~= fltk.FL_KP_Enter then return end
	
	local str=consoleIn:value()
	local code,error=loadstring(str)
	print(str)
	if code== nil then
		print(error)
	else
		code()
	end
	
	consoleIn:value("");
	consoleOut:show_insert_position()
end

--in iGame3D we use our own console!!! :
oldprint = print
print=myprint

---fluid code ahead---} {}
  Fl_Window console {
    label Console open
    xywh {35 178 382 186} type Double resizable size_range {375 181 513 495} visible
  } {
    Fl_Input consoleIn {
      callback consoleRun
      xywh {10 145 315 25} color 51 when 3 textfont 4 textsize 11
    }
    Fl_Button consoleRun_btn {
      label Run
      callback consoleRun
      xywh {330 145 40 25} labelsize 11
    }
    Fl_Text_Display consoleOut {
      xywh {10 2 360 137} color 52 labelsize 10 when 0 textfont 4 textsize 8 resizable
      code0 {consoleOut_buf = fltk:Fl_Text_Buffer();}
      code1 {consoleOut:buffer(consoleOut_buf);}
    }
  }
  code {consoleIn:when(11)	--enter key + changed} {}
} 
