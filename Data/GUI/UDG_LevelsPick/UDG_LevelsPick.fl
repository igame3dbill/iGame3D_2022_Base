# data file for the Fltk User Interface Designer (fluid)
version 1.0108 
header_name {.h} 
code_name {.cxx}
Function {make_window()} {open
} {
  code {showGLWindowState = false

ig3d_SetupWindowVisibility_b(showGLWindowState)
gFullscreen = getSceneInfo(IG3D_FULLSCREEN)
setSceneInfo(IG3D_FULLSCREEN, false) 

old_func=game_func

function levelspick_func()
fltk_update()
setSceneInfo(IG3D_MOUSE_VIEW, false, 1)
end
game_func=levelspick_func} {}
  code {function LevelsPickclose(w)
game_func=old_func
setSceneInfo(IG3D_FULLSCREEN, gFullscreen) 
showGLWindowState=true
ig3d_SetupWindowVisibility_b(showGLWindowState)
if w ~= nil then
w:hide()
w=nil
end
end} {}
  code {Q='"'

gUDG_PickedLevel = "Data/Levels/UDG/UDG_MainMenu"} {}
  code {-- udg_listLevels

UDG_LevelsTable={}
UDG_EasyLevelsTable={}
UDG_ChallengeLevelsTable={}
UDG_HardLevelsTable={}

function udg_listLevels()
UDG_LevelsTable={}
UDG_EasyLevelsTable={}
UDG_ChallengeLevelsTable={}
UDG_HardLevelsTable={}


udgPath=gameroot.."Data/Levels/UDG/"
folderList=ListFolder(udgPath,"t")
local levelslist=""
local foundloadscript = false

local levelshortname =""
	for i,v in pairs(folderList) do 
	listedFiles=listFiles(udgPath ..v)
		for ii,vv in pairs(listedFiles) do
		--print(ii,vv)
			if vv ~= nil then 
					if string.find(vv,"load script.lua") ~= nil then
			 		levelshortname = string.sub(v,string.find(v,"UDG_")+4,-1)
			 		for iii,vvv in pairs(listedFiles) do
					if  vvv ~= nil then
						if string.find(vvv,"levelstats") ~= nil then
						print("UDG/"..v,"level stat")
						
					
						if string.find(v,"Two") ~= nil then
						table.insert(UDG_ChallengeLevelsTable,{"UDG/"..v, levelshortname})
						levelslist=levelslist..levelshortname.."\\n"
						else
						table.insert(UDG_EasyLevelsTable,{"UDG/"..v, levelshortname})
						levelslist=levelslist..levelshortname.."\\n"	
						end
						end
						
					end
					end
					break	
					end
			end
		end
	end
	
	return levelslist
end




function fill_udgLevelsBrowser()
--udgLevelsBrowser:clear()

for i = 1,\#UDG_EasyLevelsTable,1 do
easyLevelsBrowser:add(UDG_EasyLevelsTable[i][2])
end

for i = 1,\#UDG_ChallengeLevelsTable,1 do
challengeLevelsBrowser:add(UDG_ChallengeLevelsTable[i][2])
end


end

function easyLevelsBrowserCB(w)
if w:value() == nil or w:value() == 0 then return end
gUDG_PickedLevel = "Data/Levels/"..UDG_EasyLevelsTable[w:value()][1]
end

function challengeLevelsBrowserCB(w)
if w:value() == nil or w:value() == 0 then return end
gUDG_PickedLevel = "Data/Levels/"..UDG_ChallengeLevelsTable[w:value()][1]
end} {}
  code {-- closeUDGLevelsPick "DONE BUTTON"

function closeUDGLevelsPick()
if showGLWindowState == true then 
local l,t,r,b = ig3d_GetWindowBounds__4i() 
		cfile=io.open(getSceneInfo(IG3D_ROOT).."Data/Levels/UDG/UDG_Prefs/UDG_ScreenRes.lua","w")
		local sout="ig3d_SetWindowBounds_4i("..l..","..t..","..r..","..b..")\\n"
		sout=sout.."table.insert(resolutionLevelsPick,{"..l..","..t..","..r..","..b.."})\\n"
		cfile:write(sout)
		cfile:close()	
		fltk_update()	
		
		
end
showGLWindowState=true
setSceneInfo(IG3D_FULLSCREEN, gFullscreen) 
ig3d_SetupWindowVisibility_b(true)

UDG_LevelsPickWindow:redraw()

if UDG_LevelsPickWindow ~= nil then
UDG_LevelsPickWindow:hide()
UDG_LevelsPickWindow=nil
end

game_func=fltk_update --dont do mess with text boxes
if udg_all_sounds_stop then udg_all_sounds_stop() end
coll_o_m=nil
coll_o_p=nil
coll_o_o=nil
coll_p_m=nil
gUDGMusic=nil
gUDGMusicAction=nil

loadLevel(gUDG_PickedLevel)
end} {}
  code {--showGLWindow
function showGLWindow()
showGLWindowState= not showGLWindowState 
ig3d_SetupWindowVisibility_b(showGLWindowState)
end} {}
  Fl_Window UDG_LevelsPickWindow {
    label {Unlocked Levels}
    callback LevelsPickclose open
    xywh {608 301 260 323} type Double visible
  } {
    Fl_Button UDG_LevelsPickdoneButton {
      label Done
      callback closeUDGLevelsPick
      xywh {10 290 225 25} align 16 when 6
    }
    Fl_Group {} {open
      xywh {2 3 245 279}
    } {
      Fl_Tabs UDG_LevelsPickTabs {open
        xywh {10 3 235 279} labelsize 12
      } {
        Fl_Group EasyGroup {
          label Easy open
          xywh {12 32 230 249} labelsize 11 align 0
        } {
          Fl_Browser easyLevelsBrowser {
            callback easyLevelsBrowserCB
            xywh {12 34 228 245} type Hold labelsize 11 textsize 11
          }
        }
        Fl_Group ChallengeGroup {
          label Difficult open
          xywh {10 32 233 250} labelsize 11 align 0 hide
        } {
          Fl_Browser challengeLevelsBrowser {
            callback challengeLevelsBrowserCB
            xywh {11 37 228 245} type Hold labelsize 11 textsize 11
          }
        }
      }
    }
  }
  code {UDG_LevelsPickWindow:show()
udg_listLevels()

fill_udgLevelsBrowser()
UDG_LevelsPickWindow:redraw()
fltk_update()} {}
} 
